1.package.json里面定义项目的具体信息和依赖。执行npm install的时候会自动检查package.json里面的项目依赖。然后生成node_modules

2.webpack从入口文件开始将require东西整合回来打包

这些文件的导入是npm做的。。webpack只是将需要的东西从node_module拿过来打包

3.loader:加载器

4.bable-loader用来将es6，jsx的语法转化成es5

5.webpack.configure.js是webpack默认的配置文件

6.webpack dev server可以创建一个服务器。可以监控文件的变化进而自动编译。

7.react hot loader实现热更新，文件变化的时候更新页面。。。只更新改变的东西

8.webpack里面的plugins可以引入插件，实现更多的功能


9.react实现了组件化编程，实现了代码复用。虚拟dom的实现使得我们不必去修改真实的dom。


10.React State(状态)
React 把组件看成是一个状态机（State Machines）。通过与用户的交互，实现不同状态，然后渲染 UI，让用户界面和数据保持一致。
React 里，只需更新组件的 state，然后根据新的 state 重新渲染用户界面（不要操作 DOM）。

11.
state 和 props 主要的区别在于 props 是不可变的，而 state 可以根据与用户交互来改变。

12.
Props 验证使用 propTypes，它可以保证我们的应用组件被正确使用，React.PropTypes 提供很多验证器 (validator) 来验证传入数据是否有效。当向 props 传入无效数据时，JavaScript 控制台会抛出警告。

13.
设置状态:setState
setState(object nextState[, function callback])
参数说明
nextState，将要设置的新状态，该状态会和当前的state合并
callback，可选参数，回调函数。该函数会在setState设置成功，且组件重新渲染后调用
14.
props相当于组件的数据流，它总是会从父组件向下传递至所有的子组件中
15.
setprops也会触发组件重新渲染
